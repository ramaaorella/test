@startuml DeploymentDiagram

node "Gateway de mensajería" as GatewayMensajeria {
  component IncomingMessageReceiver
  queue incomingQueue
  component IncomingMessageSender
  component OutgoingMessageReceiver
  queue outgoingQueue
  component OutgoingMessageSender
}
node "RabbitMQ Broker\n//Gateway de mensajería//" as RabbitMQBrokerGatewayMsj

node "//<<device>>//\nClient Browser" as ClientBrowser

node "Web Server" as WebServer {
  component Frontend
}

node "Core" as Core {
  component "Gateway" as Gateway
  together "Integration Services" as IntegrationServices {
    component "Special Integration Service" as SpecialIntegrationService
    component "<U+0000>" as aux /' Used to center connections '/
    hide aux
    component "Websocket Manager" as WebsocketManager

    SpecialIntegrationService -[hidden]right- aux
    aux -[hidden]right- WebsocketManager
  }
  together "Business Services" as BusinessServices {
    component "Message Service" as MessageService
    component "Persistance Service" as PersistanceService
    component "Notification Service" as NotificationService

    MessageService -[hidden]right- PersistanceService
    PersistanceService -[hidden]right- NotificationService
  }
  together "Data Access Services" as DataAccessServices {
    component "Message Repository" as MessageRepository
    component "Notification Repository" as NotificationRepository
    component "User Repository" as UserRepository

    MessageRepository -[hidden]right-  NotificationRepository
    NotificationRepository -[hidden]right- UserRepository 
  }

  Gateway -[hidden]down- aux
  aux -[hidden]down- PersistanceService
  PersistanceService -[hidden]down- NotificationRepository
}
node "RabbitMQ Broker\n//Core//" as RabbitMQBrokerCore

Core ..> RabbitMQBrokerCore

node "Database Server" as DatabaseServer

GatewayMensajeria ..> RabbitMQBrokerGatewayMsj
GatewayMensajeria -left- Core

ClientBrowser -- WebServer : HTTPS
WebServer -down- Core : HTTP / Websocket
Core -down- DatabaseServer : TCP/IP

@enduml
